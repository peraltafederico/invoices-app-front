name: Deploy App

on:
  push:
    tags:
      - "*"
  
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: sa-east-1
    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2
      
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and tag
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        with:
          context: ./
          file: ./Dockerfile
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/invoices-app-front:${{ env.RELEASE_VERSION }}, ${{ secrets.DOCKER_HUB_USERNAME }}/invoices-app-front:latest
          build-args: GATSBY_API_BASE_URL=${{ secrets.GATSBY_API_BASE_URL }}
          push: false
          load: true
        
      - name: Deploy
        run: |
          docker run --env AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }} --env AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }} --env AWS_DEFAULT_REGION=${{ env.AWS_DEFAULT_REGION }} ${{ secrets.DOCKER_HUB_USERNAME }}/invoices-app-front

      - name: Push
        if: contains(steps.vars.outputs.tag, 'v')
        run: |
          docker push --all-tags ${{ secrets.DOCKER_HUB_USERNAME }}/invoices-app-front

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Invalidate cache
        run: aws cloudfront create-invalidation --distribution-id E2HQSLEQPPCEY9 --paths '/*'